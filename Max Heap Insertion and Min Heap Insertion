//MAX HEAP INSERTION.

// #include<iostream>
// using namespace std;
// class heap{
//     public:
//     int arr[100];
//     int size;
//     heap(){
//         arr[0]=-1;
//         size=0;
//     }
//     void insert(int value){
//         size=size+1;
//         int index=size;
//         arr[index]=value;
//         while(index>1){
//             int parent=index/2;
//             if(arr[parent]<arr[index]){
//                 swap(arr[parent],arr[index]);
//                 index=parent;
//             }
//             else{
//                 return ;
//             }
//         }
//     }
//     void print(){
//         for(int i=1;i<=size;i++){
//             cout<<arr[i]<<" ";
//         }
//         cout<<endl;
//     }
//     void delete_from_heap(){
//         if(size==0){
//             cout<<"nothing to delete"<<endl;
//             return ;
//         }
//         arr[1]=arr[size]; //step 1
//         size--;          //step2
//         int i=1;
//         while(i<size){
//             int lefIndex=2*i;
//             int rightIndex=2*i+1;
//             if(lefIndex<size&&arr[i]<arr[lefIndex]){
//                 swap(arr[i],arr[lefIndex]);
//                 i=lefIndex;
//             }
//             else if(rightIndex<size&&arr[i]<arr[rightIndex]){
//                 swap(arr[i],arr[rightIndex]);
//                 i=rightIndex;
//             }
//             else{
//                 return;
//             }
//         }
//     }
// };
// int main(){
//     heap h;
//     h.insert(50);
//     h.insert(55);
//     h.insert(53);
//     h.insert(52);
//     h.insert(54);
//     h.print();
//   // h.delete_from_heap();
//   //  cout<<endl;
//   //  h.print();
//     return 0;
// }

//***************************************************************

// //INSERTION FOR MIN HEAP

// #include<iostream>
// #include<climits>
// using namespace std;

// class heap {
// public:
//     int arr[100];
//     int size;

//     heap() {
//         arr[0] = INT_MAX; // Set the sentinel value for a min heap
//         size = 0;
//     }

//     void insert(int value) {
//         size = size + 1;
//         int index = size;
//         arr[index] = value;
//         while (index > 1) {
//             int parent = index / 2;
//             if (arr[parent] > arr[index]) {
//                 swap(arr[parent], arr[index]);
//                 index = parent;
//             } else {
//                 return;
//             }
//         }
//     }

//     void print() {
//         for (int i = 1; i <= size; i++) {
//             cout << arr[i] << " ";
//         }
//         cout << endl;
//     }
// void delete_from_heap(){
//         if(size == 0){
//             cout << "Nothing to delete" << endl;
//             return;
//         }
//         arr[1] = arr[size];
//         size--;
//         int i = 1;
//         while(i * 2 <= size){ // Modify the condition for Min Heap
//             int leftIndex = 2 * i;
//             int rightIndex = 2 * i + 1;
//             int minIndex = i;
//             if(leftIndex <= size && arr[leftIndex] < arr[minIndex]){
//                 minIndex = leftIndex;
//             }
//             if(rightIndex <= size && arr[rightIndex] < arr[minIndex]){
//                 minIndex = rightIndex;
//             }
//             if(minIndex != i){
//                 swap(arr[i], arr[minIndex]);
//                 i = minIndex;
//             }
//             else{
//                 return;
//             }
//         }
//     }
// };

// int main() {
//     heap h;
//     h.insert(50);
//     h.insert(55);
//     h.insert(53);
//     h.insert(52);
//     h.insert(54);
//     h.print();
//   // h.delete_from_heap();
//   // h.print();
//     return 0;
// }

